---
- property:
    name: 'fabric-go-x86_64'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
            PATH=$GOROOT/bin:$GOPATH/bin:~/npm/bin:$PATH:$WORKSPACE/gopath/src/github.com/hyperledger/fabric/build/bin:/home/jenkins/.nvm/versions/node/v6.9.5/bin:/home/jenkins/.nvm/versions/node/v8.9.4/bin:/home/jenkins/.nvm/versions/node/v8.11.3/bin:/home/jenkins/.nvm/versions/node/v10.15.3/bin:/home/jenkins/npm/lib/node_modules/mocha/bin:$WORKSPACE/gopath/src/github.com/hyperledger/fabric/.build/bin
            ARCH=x86_64

- property:
    name: 'fabric-go-s390x'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            PATH=$GOROOT/bin:$GOPATH/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:~/npm/bin:/home/jenkins/.nvm/versions/node/v6.9.5/bin:/home/jenkins/.nvm/versions/node/v8.9.4/bin:/home/jenkins/.nvm/versions/node/v8.11.3/bin:/home/jenkins/.nvm/versions/node/v10.15.3/bin:$PATH
            ARCH=s390x

- property:
    name: 'fabric-go-ppc64le'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            PATH=$GOROOT/bin:$GOPATH/bin:$HOME/.nvm/versions/node/v6.9.5/bin:$HOME/.nvm/versions/node/v8.9.4/bin:/w/npm/bin:/home/jenkins/.nvm/versions/node/v8.11.3/bin:/home/jenkins/.nvm/versions/node/v10.15.3/bin:$PATH
            ARCH=ppc64le

- property:
    name: 'fabric-s390x'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            GOROOT=/opt/go/go1.10.4.linux.s390x
            PATH=$GOROOT/bin:$GOPATH/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:~/npm/bin:/home/jenkins/.nvm/versions/node/v6.9.5/bin:/home/jenkins/.nvm/versions/node/v8.9.4/bin:/home/jenkins/.nvm/versions/node/v8.11.3/bin:/home/jenkins/.nvm/versions/node/v10.15.3/bin:$PATH
            ARCH=s390x

- property:
    name: 'fabric-ppc64le'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            GOROOT=/usr/local/go/bin
            PATH=$GOROOT/bin:$GOPATH/bin:$PATH
            ARCH=ppc64le

- property:
    name: 'fabric-x86_64'
    properties:
      - inject:
          properties-content: |
            GOPATH=$WORKSPACE/gopath
            GOROOT=/opt/go/go1.10.4.linux.amd64
            JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
            PATH=$GOROOT/bin:$GOPATH/bin:~/npm/bin:$PATH:$WORKSPACE/gopath/src/github.com/hyperledger/fabric/build/bin:/home/jenkins/.nvm/versions/node/v6.9.5/bin:/home/jenkins/.nvm/versions/node/v8.9.4/bin:/home/jenkins/npm/lib/node_modules/mocha/bin:/home/jenkins/.nvm/versions/node/v8.11.3/bin:/home/jenkins/.nvm/versions/node/v10.15.3/bin:/home/jenkins/npm/lib/node_modules/mocha/bin:$WORKSPACE/gopath/src/github.com/hyperledger/fabric/.build/bin
            ARCH=x86_64

############
# Set Gopath
############

# Set Gopath for x86_64 arch
- builder:
    name: 'golang-environment-x86_64'
    builders:
      - inject:
          properties-file: $WORKSPACE/gopath/src/github.com/hyperledger/$PROJECT/ci.properties
          properties-content: |
            GOROOT=/opt/go/go${GO_VER}.linux.amd64
            # Jenkins performs an 'eval' on $PATH (which contains the literal '$GOROOT')
            # Now that GOROOT is set, it will get expanded.
            PATH=$PATH

# Set Gopath for s390x arch
- builder:
    name: 'golang-environment-s390x'
    builders:
      - inject:
          properties-file: $WORKSPACE/gopath/src/github.com/hyperledger/$PROJECT/ci.properties
          properties-content: |
            GOROOT=/opt/go/go$GO_VER.linux.s390x
            PATH=$GOROOT/bin:$PATH

# Set Gopath for ppc64le arch
- builder:
    name: golang-environment-ppc64le
    builders:
      - inject:
          properties-file: $WORKSPACE/gopath/src/github.com/hyperledger/$PROJECT/ci.properties
          properties-content: |
            GOROOT=/usr/local/go/go$GO_VER.linux.ppc64le
            PATH=$GOROOT/bin:$PATH

##################
# Nightly Builds #
##################

- builder:
    name: fabric-nightly-release-builds
    builders:
      - shell: !include-raw: shell/include-raw-fabric-nightly-release-builds.sh

- builder:
    name: fabric-nightly-smoke-build
    builders:
      - shell: !include-raw: jjb/fabric-samples/shell/include-raw-fabric-nightly-smoke-tests.sh

- builder:
    name: fabric-nightly-publish-images
    builders:
      - shell: !include-raw: shell/include-raw-fabric-nexus-publish.sh

- builder:
    name: fabric-ca-nightly-publish-binary
    builders:
      - shell: !include-raw: shell/include-raw-fabric-ca-nexus-publish.sh

- builder:
    name: down-stream-jobs-master-x86_64
    builders:
      - conditional-step:
          condition-kind: current-status
          condition-worst: FAILURE
          condition-best: SUCCESS
          on-evaluation-failure: fail
          steps:
            - trigger-builds:
                - project:
                    - fabric-test-daily-lte-master-x86_64
                    - fabric-test-daily-pte-master-x86_64
                    - fabric-test-daily-behave-master-x86_64
                    - fabric-test-daily-ca-master-x86_64
                  predefined-parameters:
                    GIT_COMMIT=$GIT_COMMIT

- builder:
    name: down-stream-jobs-master-s390x
    builders:
      - shell: |
          #!/bin/bash

          echo "-----------> Don't Trigger tests on master s390x platform"

- builder:
    name: down-stream-jobs-release-1.2-s390x
    builders:
      - shell: |
          #!/bin/bash

          echo "-----------> Don't Trigger tests on master s390x platform"

- builder:
    name: down-stream-jobs-release-1.3-x86_64
    builders:
      - conditional-step:
          condition-kind: current-status
          condition-worst: FAILURE
          condition-best: SUCCESS
          on-evaluation-failure: fail
          steps:
            - trigger-builds:
                - project:
                    - fabric-test-daily-lte-release-1.3-x86_64
                    - fabric-test-daily-ote-release-1.3-x86_64
                    - fabric-test-daily-pte-release-1.3-x86_64
                    - fabric-test-daily-behave-release-1.3-x86_64
                    - fabric-test-daily-ca-release-1.3-x86_64
                  predefined-parameters:
                    GIT_COMMIT=$GIT_COMMIT

- builder:
    name: down-stream-jobs-release-1.3-s390x
    builders:
      - shell: |
          #!/bin/bash

          echo "-----------> Don't Trigger tests on release-1.3 s390x platform"

- builder:
    name: down-stream-jobs-release-1.4-s390x
    builders:
      - shell: |
          #!/bin/bash

          echo "-----------> Don't Trigger tests on release-1.4 s390x platform"

- builder:
    name: down-stream-jobs-release-1.4-x86_64
    builders:
      - conditional-step:
          condition-kind: current-status
          condition-worst: FAILURE
          condition-best: SUCCESS
          on-evaluation-failure: fail
          steps:
            - trigger-builds:
                - project:
                    - fabric-test-daily-lte-release-1.4-x86_64
                    - fabric-test-daily-ote-release-1.4-x86_64
                    - fabric-test-daily-pte-release-1.4-x86_64
                    - fabric-test-daily-behave-release-1.4-x86_64
                    - fabric-test-daily-ca-release-1.4-x86_64

- builder:
    name: down-stream-jobs-master-ppc64le
    builders:
      - shell: |
          #!/bin/bash

          echo "-----------> Don't Trigger tests on master ppc64le platform"

- builder:
    name: down-stream-jobs-release-1.2-x86_64
    builders:
      - conditional-step:
          condition-kind: current-status
          condition-worst: FAILURE
          condition-best: SUCCESS
          on-evaluation-failure: fail
          steps:
            - trigger-builds:
                - project:
                    - fabric-test-daily-pte-release-1.2-x86_64
                    - fabric-test-daily-svt-release-1.2-x86_64
                  predefined-parameters:
                    GIT_COMMIT=$GIT_COMMIT

##################
# Nightly Builds #
##################

- builder:
    name: output-environment
    builders:
      - shell: |
          #!/bin/bash -exu
          set -o pipefail

          echo "----> Tool Status"
          # Output all information about the environment
          uname -a
          env
          gcc --version
          docker version
          docker info
          docker-compose version
          pgrep -a docker
          docker images
          docker ps -a

- builder:
    name: fabric-build-artifacts
    builders:
      - shell: !include-raw: jjb/fabric/shell/fabric-build-script.sh

- builder:
    name: publish-nexus-images
    builders:
      - shell: !include-raw: shell/include-raw-fabric-publish-nexus-images.sh

- builder:
    name: publish-docker-images
    builders:
      - shell: !include-raw: shell/include-raw-fabric-publish-docker-images.sh

- builder:
    name: pull-thirdparty-images
    builders:
      - shell:
          !include-raw: shell/include-raw-pull-thirdparty-images.sh

- builder:
    name: clean-environment
    builders:
      - shell:
          !include-raw: jjb/common-scripts/include-raw-fabric-clean-environment.sh

- builder:
    name: dockerimages
    builders:
      - shell:
          !include-raw: shell/include-raw-FIT-dockerimages.sh

- builder:
    name: end-to-end-NODE
    builders:
      - shell:
          !include-raw: shell/include-raw-FIT-NODE-e2e.sh

- builder:
    name: publish-nodeenv-images
    builders:
      - shell:
          !include-raw: shell/include-raw-publish-nodeenv-images.sh

- builder:
    name: end-to-end-NODE-daily
    builders:
      - shell:
          !include-raw: shell/include-raw-FIT-NODE-e2e-daily.sh

- builder:
    name: end-to-end-JAVA
    builders:
      - shell:
          !include-raw: shell/include-raw-FIT-JAVA-e2e.sh

- builder:
    name: fetchbaseimages
    builders:
      - shell:
          !include-raw: shell/include-raw-fetch-dockerimages.sh

# Macro for fabric unit-test job
- builder:
    name: fabric-unit-tests-verification
    builders:
      - shell: |
          #!/bin/bash -x

          vote(){
               ssh -p 29418 hyperledger-jobbuilder@$GERRIT_HOST gerrit review \
                    $GERRIT_CHANGE_NUMBER,$GERRIT_PATCHSET_NUMBER \
                    --notify '"NONE"' \
                    "$@"
          }

          vote -m '"Starting unit tests"' -l F3-UnitTest=0
          echo -e "\033[1m--------> Unit Tests\033[0m"
          cd gopath/src/github.com/hyperledger/fabric && time make unit-test
          res=$(echo $?)
          if [ $res = 0 ]; then
              vote -m '"Succeeded"' -l F3-UnitTest=+1
          else
              vote -m '"Failed"' -l F3-UnitTest=-1
              exit 1
          fi

# Macro for fabric integration test job
- builder:
    name: fabric-integration-tests-verification
    builders:
      - shell: |
          #!/bin/bash -x

          vote(){
               ssh -p 29418 hyperledger-jobbuilder@$GERRIT_HOST gerrit review \
                    $GERRIT_CHANGE_NUMBER,$GERRIT_PATCHSET_NUMBER \
                    --notify '"NONE"' \
                    "$@"
          }
          vote -m '"Starting Integration tests"' -l F3-IntegrationTest=0
          cd gopath/src/github.com/hyperledger/fabric
          if [[ "$GERRIT_BRANCH" == "release-1.1" || "$GERRIT_BRANCH" == "release-1.0" ]]; then
              echo -e "\033[1m--------> Don't Trigger IntegrationTests on $GERRIT_BRANCH branch\033[0m"
              vote -m '"Succeeded"' -l F3-IntegrationTest=+1
          else
              echo -e "\033[1m--------> Intergration Tests\033[0m"
              time make integration-test
              res=$(echo $?)
              if [ $res = 0 ]; then
                 vote -m '"Succeeded"' -l F3-IntegrationTest=+1
              else
                 vote -m '"Failed"' -l F3-IntegrationTest=-1
                 exit 1
              fi
          fi

- builder:
    name: pull-nexus-chaincode-java-image
    builders:
      - shell:
          !include-raw: shell/include-raw-pull-nexus-chaincode-java.sh

- builder:
    name: pull-nexus-chaincode-nodeenv-image
    builders:
      - shell:
          !include-raw: shell/include-raw-pull-nexus-nodeenv-image.sh

- builder:
    name: end-to-end-BYFN
    builders:
      - shell: !include-raw: shell/include-raw-fabric-byfn-daily-tests.sh

- builder:
    name: clone-fabric-samples
    builders:
      - shell: !include-raw: shell/include-raw-fabric-samples-clone.sh

- publisher:
    name: log-artifacts
    publishers:
      - archive:
          artifacts: '**/*.log'
          fingerprint: true
          default-excludes: false
          allow-empty: true

- publisher:
    name: code-coverage-report
    publishers:
      - cobertura:
          report-file: "**/report.xml"
          targets:
            - files:
                healthy: 80
                unhealthy: 50
                failing: 0
            - method:
                healthy: 80
                unhealthy: 50
                failing: 0
            - line:
                healthy: 80
                unhealthy: 50
                failing: 0
            - packages:
                healthy: 80
                unhealthy: 50
                failing: 0
            - classes:
                healthy: 80
                unhealthy: 50
                failing: 0

- publisher:
    name: jacoco-coverage-report
    publishers:
      - jacoco:
          exec-pattern: '**/merged.exec'
          class-pattern: '**/classes'
          source-pattern: '**/src/main/java'
          inclusion-pattern: '**/*.class'
          exclusion-pattern: '**/org/hyperledger/fabric/protos/**'
          targets:
            - instruction:
                healthy: 7
                unhealthy: 1
            - branch:
                healthy: 8
                unhealthy: 2
            - complexity:
                healthy: 9
                unhealthy: 3
            - line:
                healthy: 10
                unhealthy: 4
            - method:
                healthy: 11
                unhealthy: 5
            - class:
                healthy: 12
                unhealthy: 6

- publisher:
    name: ca-code-coverage-report
    publishers:
      - cobertura:
          report-file: "**/coverage.xml"
          targets:
            - files:
                healthy: 80
                unhealthy: 75
                failing: 0
            - method:
                healthy: 80
                unhealthy: 75
                failing: 0
            - line:
                healthy: 80
                unhealthy: 75
                failing: 0
            - packages:
                healthy: 80
                unhealthy: 75
                failing: 0
            - classes:
                healthy: 80
                unhealthy: 75
                failing: 0

- publisher:
    name: daily-test-results
    publishers:
      - junit:
          results: '**/TEST*.xml, **/results*.xml'

- publisher:
    name: down-stream-jobs
    publishers:
      - downstream-ext:
          projects:
            - fabric-test-svt-x86_64
            - fabric-test-pte-x86_64
          condition: equal
          criteria: success

- publisher:
    name: test-logs
    publishers:
      - archive:
          artifacts: '**/*.csv, **/*.log, **/*.xml'
          fingerprint: true
          default-excludes: false
          allow-empty: true

# Inspects source code for security problems by scanning the Go AST.
- builder:
    name: fabric-gosec-scan
    builders:
      - shell: |
          #!/bin/bash

          cd gopath/src/github.com/hyperledger/fabric/
          mv vendor/ vendor1/
          echo "------> Running the Go SEC scan for security problems in source code."
          go get github.com/securego/gosec/cmd/gosec/...

          for packages in bccsp common core events gossip idemix msp orderer peer protos vendor1; do
             gosec -fmt=json -out=$packages.json ./$packages/...
          done

- publisher:
    name: fabric-gosec-scan-results
    publishers:
      - archive:
          artifacts: 'gopath/src/github.com/hyperledger/fabric/*.json'
          fingerprint: true
          default-excludes: false
          allow-empty: true

- builder:
    name: npm-install
    # Installs npm using nvm via GitHub
    # Parameters:
    #    node-version: The version of NodeJS to install.
    #    nvm_version: The version of NVM to install.
    builders:
      - inject:
          properties-content: |
              NODE_VERSION={node-version}
              NVM_VERSION={nvm-version}
      - shell: !include-raw-escape: shell/npm-install.sh

- builder:
    name: fabric-docs-build-comment
    builders:
      - shell: !include-raw: shell/include-raw-fabric-build-docs.sh
