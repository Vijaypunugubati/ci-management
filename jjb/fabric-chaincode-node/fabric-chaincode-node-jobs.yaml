---
- project:
    name: fabric-chaincode-node
    project: 'fabric-chaincode-node'
    arch: 'x86_64'
    jobs:
      - fabric-nodeenv-x86_64
      - fabric-nodeenv-s390x

#######################
# Publish nodeenv image
#######################

- job-template:
    name: 'fabric-nodeenv-x86_64'
    project-type: freestyle
    node: 'hyp-x'
    concurrent: true
    mvn-settings: 'fabric-settings'

    properties:
      - 'fabric-go-x86_64'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: 'fabric-chaincode-node'
      - gerrit-parameter:
          branch: 'master'
      - gerrit-refspec-parameter:
          refspec: 'refs/heads/$GERRIT_BRANCH'
      - release-version:
          push-version: '2.0.0-stable'

    scm:
      - gerrit-trigger-github:
          base-dir: '$BASE_DIR'

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '240'

    builders:
      - clean-environment
      - output-environment
      - shell: |
          #!/bin/bash -e

          cd $BASE_DIR
          NODE_VER=8.11.3
          wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
          # shellcheck source=/dev/null
          export NVM_DIR="$HOME/.nvm"
          # shellcheck source=/dev/null
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
          echo "------> Install NodeJS"
          # Install NODE_VER
          echo "------> Use $NODE_VER"
          nvm install $NODE_VER || true
          nvm use --delete-prefix v$NODE_VER --silent
          npm install
          npm config set prefix ~/npm && npm install -g gulp

          echo -e "\033[32m npm version ------> $(npm -v)" "\033[0m"
          echo -e "\033[32m node version ------> $(node -v)" "\033[0m"

          gulp docker-image-build
          docker images | grep hyperledger && docker ps -a
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          fabric-settings-file: '{mvn-settings}'
      - docker-login
      - shell: |
          #!/bin/bash

          cd $BASE_DIR
          ORG_NAME=hyperledger/fabric
          NEXUS_URL=nexus3.hyperledger.org:10003
          docker tag $ORG_NAME-nodeenv $NEXUS_URL/$ORG_NAME-nodeenv:amd64-$PUSH_VERSION
          docker tag $ORG_NAME-nodeenv $NEXUS_URL/$ORG_NAME-nodeenv:amd64-latest
          docker push $NEXUS_URL/$ORG_NAME-nodeenv:amd64-latest
          docker push $NEXUS_URL/$ORG_NAME-nodeenv:amd64-$PUSH_VERSION

- job-template:
    name: 'fabric-nodeenv-s390x'
    project-type: freestyle
    node: 'hyp-z'
    concurrent: true
    mvn-settings: 'fabric-settings'

    properties:
      - 'fabric-go-s390x'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: 'fabric-chaincode-node'
      - gerrit-parameter:
          branch: 'master'
      - gerrit-refspec-parameter:
          refspec: 'refs/heads/$GERRIT_BRANCH'
      - release-version:
          push-version: '2.0.0-stable'

    scm:
      - gerrit-trigger-github:
          base-dir: '$BASE_DIR'

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '240'

    builders:
      - clean-environment
      - output-environment
      - shell: |
          #!/bin/bash -e

          cd $BASE_DIR
          NODE_VER=8.11.3
          wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
          # shellcheck source=/dev/null
          export NVM_DIR="$HOME/.nvm"
          # shellcheck source=/dev/null
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
          echo "------> Install NodeJS"
          # Install NODE_VER
          echo "------> Use $NODE_VER"
          nvm install $NODE_VER || true
          nvm use --delete-prefix v$NODE_VER --silent
          npm install
          npm config set prefix ~/npm && npm install -g gulp

          echo -e "\033[32m npm version ------> $(npm -v)" "\033[0m"
          echo -e "\033[32m node version ------> $(node -v)" "\033[0m"

          gulp docker-image-build
          docker images | grep hyperledger && docker ps -a
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          fabric-settings-file: '{mvn-settings}'
      - docker-login
      - shell: |
          #!/bin/bash

          cd $BASE_DIR
          ORG_NAME=hyperledger/fabric
          NEXUS_URL=nexus3.hyperledger.org:10003
          docker tag $ORG_NAME-nodeenv $NEXUS_URL/$ORG_NAME-nodeenv:s390x-$PUSH_VERSION
          docker tag $ORG_NAME-nodeenv $NEXUS_URL/$ORG_NAME-nodeenv:s390x-latest
          docker push $NEXUS_URL/$ORG_NAME-nodeenv:s390x-latest
          docker push $NEXUS_URL/$ORG_NAME-nodeenv:s390x-$PUSH_VERSION

###############
## Pipeline job configuration for verify and merge jobs
##############

##########################
# Verify Job Configuration
##########################

- project:
    name: fabric-chaincode-node-verify-x86_64
    jobs:
      - 'fab-pipeline-verify'

    project: fabric-chaincode-node
    branch: ''
    arch: 'x86_64'
    build_node: 'x'
    comment1: 'reverify-x$'
    comment2: 'reverify$'
    trigger_type: submitted
    jenkins_file: Jenkinsfile.x
    log_days: 7
    src_branch: '$GERRIT_REFSPEC'
    src_code: '$GERRIT_REFSPEC:$GERRIT_REFSPEC'
    refspec: ''

- project:
    name: fabric-chaincode-node-verify-s390x
    jobs:
      - 'fab-pipeline-verify'

    project: fabric-chaincode-node
    branch: ''
    arch: 's390x'
    build_node: 'z'
    comment1: 'reverify-z$'
    comment2: 'reverify$'
    trigger_type: submitted
    jenkins_file: Jenkinsfile.z
    log_days: 7
    src_branch: '$GERRIT_REFSPEC'
    src_code: '$GERRIT_REFSPEC:$GERRIT_REFSPEC'
    refspec: ''

#########################
# Merge Job Configuration
#########################

- project:
    name: fabric-chaincode-node-merge-s390x
    jobs:
      - 'fab-pipeline-merge'

    project: fabric-chaincode-node
    branch: ''
    arch: 's390x'
    build_node: 'z'
    comment1: 'remerge-z$'
    comment2: 'remerge$'
    trigger_type: merged
    jenkins_file: Jenkinsfile.z
    log_days: 7
    src_branch: 'refs/heads/$GERRIT_BRANCH'
    src_code: '+refs/heads/$GERRIT_BRANCH:refs/remotes/origin/$GERRIT_BRANCH'
    refspec: 'refs/heads/$GERRIT_BRANCH'

- project:
    name: fabric-chaincode-node-merge-x86_64
    jobs:
      - 'fab-pipeline-merge'

    project: fabric-chaincode-node
    branch: ''
    arch: 'x86_64'
    build_node: 'x'
    comment1: 'remerge-x$'
    comment2: 'remerge$'
    trigger_type: merged
    jenkins_file: Jenkinsfile.x
    log_days: 7
    src_branch: 'refs/heads/$GERRIT_BRANCH'
    src_code: '+refs/heads/$GERRIT_BRANCH:refs/remotes/origin/$GERRIT_BRANCH'
    refspec: 'refs/heads/$GERRIT_BRANCH'
