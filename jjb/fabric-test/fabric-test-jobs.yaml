---
- project:
    name: fabric-test-project-view
    project-name: fabric-test
    views:
      - project-view

- project:
    name: fabric-test-jobs
    jobs:
      - 'fabric-test-svt-weekly-pte-{arch}'

    project: 'fabric-test'
    arch:
      - 'x86_64'
    mvn-settings: 'fabric-settings'

# gerrit changes

######
# fabric-test verify job on x platform
# This job triggers on gerrit "patchset created" event
######
- project:
    name: 'fabric-test-verify-x86_64'
    jobs:
      - 'fabric-test-verify-job'

    project: fabric-test
    project-name: fabric-test
    branch: ''
    arch: 'x86_64'
    build-node: 'x'
    build-timeout: 120

######
# fabric-test merge job on x platform
# This job triggers on gerrit "patchset merged" event
######
- project:
    name: 'fabric-test-merge-x86_64'
    jobs:
      - 'fabric-test-merge-job'

    project: fabric-test
    project-name: fabric-test
    branch: ''
    arch: 'x86_64'
    build-node: 'x'
    build-timeout: 120

# gerrit changes

- job-template:
    name: '{project-name}-publish-{image}-{branch}-{arch}'

    project-type: freestyle
    node: 'hyp-{arch}'
    concurrent: true

    properties:
      - 'fabric-go-{arch}'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: '{project}'
      - gerrit-parameter:
          branch: '{branch}'
      - release-version:
          push-version: '{release_version}'
      - gerrit-refspec-parameter:
          refspec: 'refs/heads/$GERRIT_BRANCH'

    scm:
      - gerrit-trigger-scm-merge:
          base-dir: '$BASE_DIR'

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '50'

    builders:
      - clean-environment
      - output-environment
      - provide-maven-settings:
          global-settings-file: 'global-settings'
          fabric-settings-file: '{mvn-settings}'
      - docker-login
      - '{image}-dockerimage-publish'

# fabric-test daily jobs, ote,lte,pte,svt.

- job-template:
    name: '{project-name}-daily-{test}-{job_branch}-{arch}'

    project-type: freestyle
    node: 'hyp-{arch}'
    concurrent: true

    properties:
      - 'fabric-go-{arch}'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: '{project}'
      - gerrit-parameter:
          branch: '{branch}'
      - gerrit-refspec-parameter:
          refspec: ''
      - stable-version:
          pull-version: '{stable-tag}'
      - release-version:
          push-version: '{rel_version}'
      - git-commit:
          commit: ''

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '840'

    builders:
      - clean-environment
      - output-environment
      - shell: |
         #!/bin/bash -e

         rm -rf $WORKSPACE/gopath/src/github.com/hyperledger/fabric-test
         WD="$WORKSPACE/gopath/src/github.com/hyperledger/fabric-test"
         FABRIC_TEST_REPO_NAME=fabric-test
         git clone --single-branch -b $GERRIT_BRANCH --depth=1 git://cloud.hyperledger.org/mirror/$FABRIC_TEST_REPO_NAME $WD
         cd $WD
         git checkout $GERRIT_BRANCH
         FABRIC_TEST_COMMIT=$(git rev-parse --short HEAD)
         echo "------> FABRIC_TEST_COMMIT : $FABRIC_TEST_COMMIT"
         echo "------> BRANCH: $GERRIT_BRANCH"
         # Fetch Go Version from fabric ci.properties file
         curl -L https://raw.githubusercontent.com/hyperledger/fabric/$GERRIT_BRANCH/ci.properties > ci.properties
         export GO_VER=`cat ci.properties | grep GO_VER | cut -d "=" -f 2`
         OS_VER=$(dpkg --print-architecture)
         echo "------> ARCH: $OS_VER"
         export GOROOT=/opt/go/go$GO_VER.linux.$OS_VER
         export PATH=$GOROOT/bin:$PATH
         echo "------> GO_VER" $GO_VER
         # Execute Make target from fabric-test Makefile
         LATEST_TAG=$STABLE_VERSION
         echo "========> LATEST_TAG: $LATEST_TAG"
         RELEASE_VERSION=$PUSH_VERSION
         echo "========> RELEASE_VERSION: $RELEASE_VERSION"
         make {target}

    publishers:
      - lf-infra-publish
      - daily-test-results
      - test-logs
      - fabric-email-notification:
          email-ids: 'development.brett@gmail.com, vijaypunugubati@gmail.com'
          output_format: ''
          developer-email: 'developers'

- job-template:
    name: '{project-name}-daily-results-{job_branch}-{arch}'

    project-type: freestyle
    node: 'hyp-{arch}'
    concurrent: true

    properties:
      - 'fabric-go-{arch}'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: '{project}'
      - gerrit-parameter:
          branch: '{branch}'

    triggers:
      - timed: 'H 15 * * *'

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '10'

    builders:
      - clean-environment
      - output-environment
      - fabric-test-daily-report

    publishers:
      - lf-infra-publish
      - daily-test-results
      - fabric-email-notification:
          email-ids: 'development.brett@gmail.com, vijaypunugubati@gmail.com'
          output_format: ''
          developer-email: 'developers'

- job-template:
    name: 'fabric-test-svt-weekly-pte-{arch}'

    project-type: freestyle
    node: 'hyp-{arch}'
    concurrent: true

    properties:
      - 'fabric-go-{arch}'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: '{project}'
      - gerrit-parameter:
          branch: 'master'
      - gerrit-refspec-parameter:
          refspec: ''
      - stable-version:
          pull-version: ''

    triggers:
      - timed: '@weekly'

    wrappers:
      - hyperledger-infra-wrappers

    builders:
      - clean-environment
      - output-environment
      - shell: !include-raw-escape: ./shell/include-raw-pte-weekly-test.sh

    publishers:
      - lf-infra-publish
      - log-artifacts
      - fabric-email-notification:
          email-ids: 'development.brett@gmail.com, scottz@us.ibm.com, vijaypunugubati@gmail.com'
          output_format: ''
          developer-email: 'developers'

- job-template:
    name: '{project-name}-daily-{job_branch}-{arch}'

    project-type: freestyle
    node: 'hyp-{arch}'
    concurrent: true

    properties:
      - 'fabric-go-{arch}'
      - build-discarder:
          days-to-keep: 7
          artifact-days-to-keep: 7

    parameters:
      - project-parameter:
          project: '{project}'
      - gerrit-parameter:
          branch: '{branch}'
      - gerrit-refspec-parameter:
          refspec: ''
      - stable-version:
          pull-version: '{stable-tag}'
      - git-commit:
          commit: ''

    triggers:
      - timed: 'H 1 * * *'

    wrappers:
      - hyperledger-infra-wrappers
      - build-timeout:
          timeout: '840'

    builders:
      - clean-environment
      - output-environment
      - shell: |
         #!/bin/bash -e

         rm -rf $WORKSPACE/gopath/src/github.com/hyperledger/fabric-test
         WD="$WORKSPACE/gopath/src/github.com/hyperledger/fabric-test"
         FABRIC_TEST_REPO_NAME=fabric-test
         git clone --single-branch -b $GERRIT_BRANCH --depth=1 git://cloud.hyperledger.org/mirror/$FABRIC_TEST_REPO_NAME $WD
         cd $WD
         git checkout $GERRIT_BRANCH
         FABRIC_TEST_COMMIT=$(git rev-parse --short HEAD)
         echo "------> FABRIC_TEST_COMMIT : $FABRIC_TEST_COMMIT"
         echo "------> BRANCH: $GERRIT_BRANCH"
         # Fetch Go Version from fabric ci.properties file
         curl -L https://raw.githubusercontent.com/hyperledger/fabric/$GERRIT_BRANCH/ci.properties > ci.properties
         export GO_VER=`cat ci.properties | grep GO_VER | cut -d "=" -f 2`
         OS_VER=$(dpkg --print-architecture)
         echo "------> ARCH: $OS_VER"
         export GOROOT=/opt/go/go$GO_VER.linux.$OS_VER
         export PATH=$GOROOT/bin:$PATH
         echo "------> GO_VER" $GO_VER
         # Execute Make target from fabric-test Makefile
         LATEST_TAG=$STABLE_VERSION
         echo "========> LATEST_TAG: $LATEST_TAG"
         make svt-daily-behave-tests

    publishers:
      - lf-infra-publish
      - daily-test-results
      - test-logs
      - fabric-email-notification:
          email-ids: 'development.brett@gmail.com, vijaypunugubati@gmail.com'
          output_format: ''
          developer-email: 'developers'
