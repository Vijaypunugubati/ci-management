---
- import_playbook: ../common-packer/provision/docker.yaml

- hosts: all
  become_user: root
  become_method: sudo
  vars:
    docker_compose_version: 1.21.1
    grpc_packages: 'grpcio==1.0.4'
    jinja2_packages: 'jinja2'
    b3j0f_packages: 'b3j0f.aop'
    pip_versioned_packages: 'flask==0.10.1 python-dateutil==2.2 pytz==2014.3 pyyaml==3.10 couchdb==1.0 flask-cors==2.0.1 requests==2.12.1 pysha3==1.0b1 pyopenssl==17.2.0'

  tasks:

    - name: 'Remove unattended-upgrades'
      command: apt-get remove -y unattended-upgrades
      become: true

    - block:
      - name: Install Golang
        get_url:
          url: https://raw.githubusercontent.com/travis-ci/gimme/master/gimme
          dest: /usr/local/bin/gimme
          mode: 0755
        become: true
      - command: gimme {{ item }} /opt/go
        with_items:
          - 1.12.7
        become: true

#    - name: 'Install haveged'
#      apt:
#        name: haveged
#        update_cache: yes
#      become: true

#    - name: start haveged
#      service:
#        name: haveged
#        enabled: yes
#      become: true

    - file:
        path: /var/hyperledger/
        state: directory
        mode: 0755
      become: true

    - apt_repository:
        repo: 'ppa:ubuntu-toolchain-r/test'
        state: present
      become: true

    - name: Install Hyperledger base packages
      apt:
        name:
          - g++-4.8
          - build-essential
          - software-properties-common
          - curl
          - sudo
          - zip
          - libtool
          - libsnappy-dev
          - zlib1g-dev
          - libbz2-dev
          - libffi-dev
          - libssl-dev
          - python-dev
          - libyaml-dev
          - python-pip
          - haproxy
          - haproxy-doc
          - htop
          - html2text
          - isag
          - jq
          - libdbd-pg-perl
          - locales-all
          - mysql-client
          - mysql-common
          - mysql-server
          - postgresql
          - postgresql-contrib
          - postgresql-doc
          - vim-haproxy
          - zsh
          - python-tox
          - maven
          - tcl
          - tclx
          - tcllib
          - apparmor
          - xmlstarlet
        update_cache: yes
      become: true

    - apt_repository:
        repo: ppa:jonathonf/python-3.6
        state: present
      become: true

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
      become: true

    - name: Install Python 3.6 and packages
      apt:
        name:
          - python3.6
          - python3.6-dev
          - libssl-dev
          - libmysqlclient-dev
          - gcc
      become: true

    - name: Install Python Packages
      pip:
        name:
          - pip
          - urllib3
          - pyopenssl
          - ndg-httpsclient
          - pyasn1
          - ecdsa
          - python-slugify
          - grpcio-tools
          - cython
          - behave
          - shade
          - nose
          - google
          - protobuf
          - pyyaml
          - pykafka
          - requests
          - pyexecjs
          - pluggy
          - flask
          - python-dateutil
          - pytz
          - pyyaml
          - couchdb
          - flask-cors
          - requests
          - pysha3
          - pyopenssl
          - grpcio
          - jinja2
          - b3j0f.aop
          - docker-compose=={{docker_compose_version}}
        extra_args: --upgrade
      become: true

#    - name: Install nvm dependencies
#      apt:
#        name:
#          - git
#          - curl
#          - build-essential
#          - libssl-dev
#      become: true

#    - name: Install nvm
#      shell: |
#         echo "----> nvm install"
#         apt-get update
#         apt-get install build-essential
#         wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash
#         export NVM_DIR="$HOME/.nvm"
#         [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
#         command -v nvm
#      become: true

    - name: Mounting /w volume
      mount:
        path:   /w
        src:    none
        fstype: tmpfs
        opts:   defaults,size=3g
        state:  mounted
      become: true

    - name: Install special host entries
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - ''
        - 127.0.0.1 peer0.org1.example.com peer1.org1.example.com
        - 127.0.0.1 peer0.org2.example.com peer1.org2.example.com
        - 127.0.0.1 orderer.example.com
      become: true

    - block:
      - name: Install softhsm
        apt:
          name:
            - softhsm2
        become: true
      - file:
          path: /var/lib/softhsm/tokens
          state: directory
        become: true
      - name: Add softhsm token
        command:
          softhsm2-util --init-token --slot 0 --label ForFabric --so-pin 1234 --pin 98765432
        become: true

    - name: Download Rust
      get_url:
        url: https://static.rust-lang.org/rustup.sh
        dest: /tmp/rustup.sh
        mode: 0755

    - name: Execute Rust script
      command: /tmp/rustup.sh -y
      become: true

    - name: Download npm and fabric node sdk dependencies
      get_url:
        url: https://deb.nodesource.com/setup_4.x
        dest: /tmp/setup_4.x
        mode: 0755

    - name: Execute node dependencies script
      command: /tmp/setup_4.x
      become: true

    - name: Download protoc
      unarchive:
        src: https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip
        dest: /usr/local
        mode: 0755
        remote_src: yes
      become: true

    - name: Remove unused protoc zip
      file:
        path: /usr/local/protoc-3.0.0-linux-x86_64.zip
        state: absent
      become: true

    - name: Pull Docker Images
      command: docker pull "{{ item }}"
      with_items:
        - hyperledger/fabric-zookeeper:amd64-0.4.14
        - hyperledger/fabric-kafka:amd64-0.4.14
        - hyperledger/fabric-couchdb:amd64-0.4.14
        - hyperledger/fabric-baseimage:amd64-0.4.14
        - hyperledger/indy-core-baseci:0.0.1
      become: true

    # I expect a LF macro to allocate Swap Space. But for now, we do it here
    # We have the additional problem because common-packer uses an agent to build this image
    # has only 10GB of disk space. This does work, as long as we keep the size of
    # swapfile small (<3GB)
    #- name: Allocate Swap Space
    #  block:
    #    - name: Allocate Space for Swap File (3G)
    #      command: dd if=/dev/zero of=/swapfile bs=1M count=3K
    #      become:  true
    #    - name: Add Swap Entry to fstab
    #      lineinfile:
    #        path: /etc/fstab
    #        line: '/swapfile    none    swap    sw    0    0'
    #      become: true
    #    - name: Fix Swap File Permissions
    #      file:
    #        path: /swapfile
    #        state: file
    #        mode: 0600
    #      become: true
    #    - name: mkswap
    #      command: mkswap /swapfile
    #      become: true
    #    - name: swapon
    #      command: swapon /swapfile
    #      become: true
